/*
 * Copyright 2019 Fitbit, Inc. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.8.1"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

def packageName = 'com.fitbit.bluetooth.fbgatt'

def buildNumber = System.getenv("BUILD_NUMBER") != null ? System.getenv("BUILD_NUMBER").toInteger() : 10000
def libraryVersionName = sprintf("0.8.0", buildNumber)

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode buildNumber
        versionName libraryVersionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
        library {
            debuggable true
            minifyEnabled false
            testCoverageEnabled false
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

ext {
    MULTIDEX_VERSION = '2.0.1'
    APP_COMPAT_VERSION = '1.1.0'
    TIMBER_VERSION = '4.7.1'
    JUNIT_VERSION = '4.12'
    TEST_RUNNER_VERSION = '1.1.0'
    MOCKITO_VERSION = '2.19.1'
    STETHO_VERSION = '1.5.1'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation("com.android.support.test.espresso:espresso-core:3.0.1", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "androidx.multidex:multidex:$MULTIDEX_VERSION"
    implementation "androidx.appcompat:appcompat:$APP_COMPAT_VERSION"
    implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"
    implementation "com.facebook.stetho:stetho:$STETHO_VERSION"
    testImplementation "junit:junit:$JUNIT_VERSION"
    testImplementation "androidx.test:runner:$TEST_RUNNER_VERSION"
    testImplementation "androidx.test:rules:$TEST_RUNNER_VERSION"
    testImplementation "org.mockito:mockito-inline:$MOCKITO_VERSION"
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
    androidTestImplementation "junit:junit:$JUNIT_VERSION"
    androidTestImplementation "androidx.test:runner:$TEST_RUNNER_VERSION"
    androidTestImplementation "androidx.test:rules:$TEST_RUNNER_VERSION"
    androidTestImplementation "org.mockito:mockito-inline:$MOCKITO_VERSION"
    androidTestImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
    androidTestImplementation("org.mockito:mockito-android:$MOCKITO_VERSION") {
        exclude group: "net.bytebuddy"
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        libraryAar(MavenPublication) {
            groupId packageName
            version = libraryVersionName
            artifactId project.getName()
            artifact sourceJar { classifier 'library' }
            artifact("$buildDir/outputs/aar/${project.getName()}-library.aar") {classifier 'library' }
        }
        releaseAar(MavenPublication) {
            groupId packageName
            groupId packageName
            version = libraryVersionName
            artifactId project.getName()

            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar") { classifier 'release' }
            artifact sourceJar { classifier 'release' }
        }
        debugAar(MavenPublication) {
            groupId packageName
            groupId packageName
            version = libraryVersionName
            artifactId project.getName()

            artifact("$buildDir/outputs/aar/${project.getName()}-debug.aar") { classifier 'debug' }
            artifact sourceJar { classifier 'debug' }
        }
        testAar(MavenPublication) {
            groupId packageName
            groupId packageName
            version = libraryVersionName
            artifactId project.getName()

            artifact("$buildDir/outputs/aar/${project.getName()}-batteryDataTest.aar") { classifier 'test' }
            artifact sourceJar { classifier 'test' }
        }
    }
}
